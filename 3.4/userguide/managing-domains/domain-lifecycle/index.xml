<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Domain life cycle on WebLogic Kubernetes Operator</title>
    <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/</link>
    <description>Recent content in Domain life cycle on WebLogic Kubernetes Operator</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Dec 2021 17:04:41 -0500</lastBuildDate>
    <atom:link href="https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Startup and shutdown</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/startup/</link>
      <pubDate>Sat, 23 Feb 2019 17:04:41 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/startup/</guid>
      <description>Contents Introduction Starting and stopping servers serverStartPolicy rules Available serverStartPolicy values Administration Server start and stop rules Standalone Managed Server start and stop rules Clustered Managed Server start and stop rules Server start state Common starting and stopping scenarios Normal running state Shut down all the servers Only start the Administration Server Shut down a cluster Shut down a specific standalone server Force a specific clustered Managed Server to start Shutdown options Shutdown environment variables shutdown rules Restarting servers Fields that cause servers to be restarted Rolling restarts Draining a node and PodDisruptionBudget Common restarting scenarios Using restartVersion to force the operator to restart servers Restart all the servers in the domain Restart all the servers in the cluster Restart the Administration Server Restart a standalone or clustered Managed Server Full domain restarts Domain lifecycle sample scripts Introduction There are fields on the Domain that specify which servers should be running, which servers should be restarted, and the desired initial state.</description>
    </item>
    <item>
      <title>Restarting</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/restarting/</link>
      <pubDate>Sat, 23 Feb 2019 20:58:51 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/restarting/</guid>
      <description>This document describes when WebLogic Server instances should and will be restarted in the Kubernetes environment.&#xA;Overview There are many situations where changes to the WebLogic or Kubernetes environment configuration require that all the servers in a domain or cluster be restarted, for example, when applying a WebLogic Server patch or when upgrading an application.&#xA;One of the operator&amp;rsquo;s most important jobs is to start and stop WebLogic Server instances by creating and deleting their corresponding Kubernetes pods.</description>
    </item>
    <item>
      <title>Scaling</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/scaling/</link>
      <pubDate>Sat, 23 Feb 2019 17:04:45 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/scaling/</guid>
      <description>WebLogic Server supports two types of clustering configurations, configured and dynamic. Configured clusters are created by defining each individual Managed Server instance. In dynamic clusters, the Managed Server configurations are generated from a single, shared template. With dynamic clusters, when additional server capacity is needed, new server instances can be added to the cluster without having to configure them individually. Also, unlike configured clusters, scaling up of dynamic clusters is not restricted to the set of servers defined in the cluster but can be increased based on runtime demands.</description>
    </item>
    <item>
      <title>Domain introspection</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/introspection/</link>
      <pubDate>Tue, 07 Jul 2020 08:14:51 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/introspection/</guid>
      <description>Contents Overview When introspection occurs automatically Initiating introspection Failed introspection Introspection use cases Overview This document describes domain introspection, when it occurs automatically, and how and when to initiate additional introspections of the domain configuration in the Oracle WebLogic Server in Kubernetes environment.&#xA;To manage the operation of WebLogic domains in Kubernetes, the Oracle WebLogic Kubernetes Operator analyzes the WebLogic domain configuration using an &amp;ldquo;introspection&amp;rdquo; job. This Job will be named DOMAIN_UID-introspector, will be run in the same namespace as the Domain, and must successfully complete before the operator will begin to start WebLogic Server instances.</description>
    </item>
    <item>
      <title>Liveness and readiness probes customization</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/liveness-readiness-probe-customization/</link>
      <pubDate>Sat, 23 Feb 2019 20:58:51 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/liveness-readiness-probe-customization/</guid>
      <description>This document describes how to customize the liveness and readiness probes for WebLogic Server instance Pods.&#xA;Contents Liveness probe customization Readiness probe customization Liveness probe customization The liveness probe is configured to check that a server is alive by querying the Node Manager process. By default, the liveness probe is configured to check liveness every 45 seconds, to timeout after 5 seconds, and to perform the first check after 30 seconds.</description>
    </item>
    <item>
      <title>Lifecycle scripts</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/scripts/</link>
      <pubDate>Sun, 05 Dec 2021 17:04:41 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/domain-lifecycle/scripts/</guid>
      <description>Beginning in version 3.1.0, the operator provides sample scripts to start up or shut down a specific Managed Server or cluster in a deployed domain, or the entire deployed domain.&#xA;Versions 3.2 and 3.3 have subsequently added sample scripts for restarting a server, scaling a cluster, rolling a domain or a cluster, monitoring a cluster, and reinitiating introspection.&#xA;The scripts are located in the kubernetes/samples/scripts/domain-lifecycle directory. They are helpful when scripting the life cycle of a WebLogic Server domain.</description>
    </item>
  </channel>
</rss>
