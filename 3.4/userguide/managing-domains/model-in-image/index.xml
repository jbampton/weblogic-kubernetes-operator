<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Model in Image on WebLogic Kubernetes Operator</title>
    <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/</link>
    <description>Recent content in Model in Image on WebLogic Kubernetes Operator</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Mar 2020 16:45:16 -0500</lastBuildDate>
    <atom:link href="https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Overview</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/overview/</link>
      <pubDate>Wed, 11 Mar 2020 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/overview/</guid>
      <description>Contents Introduction WebLogic Deploy Tool models Runtime behavior Runtime updates Continuous integration and delivery (CI/CD) References Introduction Model in Image is an alternative to the operator&amp;rsquo;s Domain in Image and Domain in PV domain types. See Choose a domain home source type for a comparison of operator domain types.&#xA;Unlike Domain in PV and Domain in Image, Model in Image eliminates the need to pre-create your WebLogic domain home prior to deploying your Domain YAML file.</description>
    </item>
    <item>
      <title>Usage</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/usage/</link>
      <pubDate>Wed, 11 Mar 2020 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/usage/</guid>
      <description>This document describes what&amp;rsquo;s needed to create and deploy a typical Model in Image domain.&#xA;Contents WebLogic Kubernetes Operator WebLogic Server image Directory structure Supplying initial model files and WDT Optional WDT model ConfigMap Required runtime encryption secret Secrets for model macros Domain fields Always use external state WebLogic Kubernetes Operator Deploy the operator and ensure that it is monitoring the desired namespace for your Model in Image domain. See Manage operators and Quick Start.</description>
    </item>
    <item>
      <title>Auxiliary images</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/auxiliary-images/</link>
      <pubDate>Sat, 23 Feb 2019 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/auxiliary-images/</guid>
      <description>Contents Introduction References Configuration Auxiliary volumes and paths Auxiliary images Model in Image paths Merge order Expected merge order Performing replaces instead of merges Merge ordering example Sample Step 1: Prerequisites Step 2: Create the auxiliary image Step 3: Prepare and apply the domain resource Step 4: Invoke the web application Introduction Auxiliary images are an alternative approach for including Model in Image model files, application archive files, WebLogic Deploy Tooling installation files, or other types of files, in your pods.</description>
    </item>
    <item>
      <title>Model files</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/model-files/</link>
      <pubDate>Wed, 11 Mar 2020 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/model-files/</guid>
      <description>Contents Introduction Sample model file Important notes about Model in Image model files Model file naming and loading order Model file macros Using secrets in model files Using environment variables in model files Combining secrets and environment variables in model files Introduction This document describes basic Model in Image model file syntax, naming, and macros. For additional information, see the WebLogic Deploy Tool documentation.&#xA;The WDT Discover Domain Tool is particularly useful for generating model files from an existing domain home.</description>
    </item>
    <item>
      <title>Runtime updates</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/runtime-updates/</link>
      <pubDate>Wed, 11 Mar 2020 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/runtime-updates/</guid>
      <description>Contents Overview Supported updates Unsupported updates Updating an existing model Offline updates Offline update steps Offline update sample Online updates Online update steps Online update handling of non-dynamic WebLogic configuration changes Online update handling of deletes Online update status and labels Online update scenarios Online update sample Appendices Using the WDT Discover and Compare Model Tools below. Changing a Domain restartVersion or introspectVersion Overview If you want to make a WebLogic domain home configuration update to a running Model in Image domain, and you want the update to survive WebLogic Server pod restarts, then you must modify your existing model and instruct the WebLogic Kubernetes Operator to propagate the change.</description>
    </item>
    <item>
      <title>Domain debugging</title>
      <link>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/debugging/</link>
      <pubDate>Wed, 11 Mar 2020 16:45:16 -0500</pubDate>
      <guid>https://oracle.github.io/weblogic-kubernetes-operator/3.4/userguide/managing-domains/model-in-image/debugging/</guid>
      <description>Here are some suggestions for debugging problems with a domain after your Domain YAML file is deployed.&#xA;Contents Check the Domain status Check the Domain events Check the introspector job Check the WebLogic Server pods Check the operator log Check the docs Check the operator Check the Domain status To check the Domain status: kubectl -n MY_NAMESPACE describe domain MY_DOMAINUID.&#xA;If you are performing an online update to a running domain&amp;rsquo;s WebLogic configuration, then see Online update status and labels.</description>
    </item>
  </channel>
</rss>
